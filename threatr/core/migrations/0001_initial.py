# Generated by Django 4.0.10 on 2023-03-09 15:35

import django.contrib.postgres.fields.hstore
from django.db import migrations, models
import django.db.models.deletion
import uuid
from django.contrib.postgres.operations import HStoreExtension


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        HStoreExtension(),
        migrations.CreateModel(
            name='EntitySuperType',
            fields=[
                ('short_name', models.CharField(max_length=32, primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(default='', help_text='Give a meaningful name to this type of entity.', max_length=512, verbose_name='name')),
                ('description', models.TextField(blank=True, help_text='Add more details about it.', null=True)),
                ('svg_icon', models.TextField(blank=True, null=True)),
                ('nf_icon', models.CharField(blank=True, max_length=256, null=True)),
            ],
            options={
                'verbose_name': 'Entity super-type',
                'verbose_name_plural': 'Entity super-types',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='EntityType',
            fields=[
                ('short_name', models.CharField(max_length=32, primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(default='', help_text='Give a meaningful name to this type of entity.', max_length=512, verbose_name='name')),
                ('description', models.TextField(blank=True, help_text='Add more details about it.', null=True)),
                ('svg_icon', models.TextField(blank=True, null=True)),
                ('nf_icon', models.CharField(blank=True, max_length=256, null=True)),
                ('super_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='super_type_of_type', to='core.entitysupertype')),
            ],
            options={
                'verbose_name': 'Entity type',
                'verbose_name_plural': 'Entity types',
                'unique_together': {('short_name', 'super_type')},
            },
        ),
        migrations.CreateModel(
            name='Request',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier.', primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Creation date of this object.')),
                ('value', models.TextField(help_text='Value of the observable to be queried.')),
                ('status', models.CharField(choices=[('CREATED', 'Created'), ('ENQUEUED', 'Enqueued'), ('PROCESSING', 'Processing'), ('POST_PROCESSING', 'Post processing'), ('SUCCEEDED', 'Succeeded'), ('CANCELLED', 'Cancelled'), ('FAILED', 'Failed')], default='CREATED', max_length=16)),
                ('super_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='request_super_type', to='core.entitysupertype')),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='request_type', to='core.entitytype')),
            ],
            options={
                'ordering': ['-value'],
            },
        ),
        migrations.CreateModel(
            name='Entity',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier.', primary_key=True, serialize=False)),
                ('name', models.CharField(default='', help_text='Give a meaningful name to this entity.', max_length=512, verbose_name='name')),
                ('description', models.TextField(blank=True, help_text='Add more details about this object.', null=True)),
                ('source_url', models.URLField(blank=True, help_text='Specify the source of this object.', null=True, verbose_name='Source URL')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Creation date of this object.')),
                ('tlp', models.CharField(choices=[('RED', 'RED'), ('AMBER', 'AMBER'), ('GREEN', 'GREEN'), ('WHITE', 'WHITE')], default='WHITE', help_text='Traffic Light Protocol, designed to indicate the sharing boundaries to be applied.', max_length=6, verbose_name='TLP')),
                ('pap', models.CharField(choices=[('RED', 'RED'), ('AMBER', 'AMBER'), ('GREEN', 'GREEN'), ('WHITE', 'WHITE')], default='WHITE', help_text='Permissible Actions Protocol, designed to indicate how the received information can be used.', max_length=6, verbose_name='PAP')),
                ('attributes', django.contrib.postgres.fields.hstore.HStoreField(blank=True, null=True)),
                ('request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)ss', to='core.request')),
                ('super_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='super_type_of', related_query_name='q_super_type_of', to='core.entitysupertype')),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='type_of', related_query_name='q_type_of', to='core.entitytype')),
            ],
            options={
                'verbose_name': 'Entity',
                'verbose_name_plural': 'Entities',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='EntityRelation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier.', primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Name of this relation between two entities.', max_length=512)),
                ('description', models.TextField(blank=True, help_text='Add more details about this object.', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Creation date of this object.')),
                ('attributes', django.contrib.postgres.fields.hstore.HStoreField(blank=True, null=True)),
                ('obj_from_id', models.UUIDField()),
                ('obj_to_id', models.UUIDField()),
                ('obj_from_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='obj_from_types', to='contenttypes.contenttype')),
                ('obj_to_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='obj_to_types', to='contenttypes.contenttype')),
                ('request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)ss', to='core.request')),
            ],
            options={
                'unique_together': {('name', 'obj_from_id', 'obj_to_id')},
            },
        ),
    ]
